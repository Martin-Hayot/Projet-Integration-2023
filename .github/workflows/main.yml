on:
  push:
    branches:
    - Develop
  workflow_dispatch:

jobs:
  build:
    name: Deploy on our vps
    runs-on: self-hosted
    env:
      NODE_ENV: production
      DATABASE_ACCESS: ${{ secrets.DATABASE_ACCESS }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_OAUTH_REDIRECT_URL: ${{ secrets.GOOGLE_OAUTH_REDIRECT_URL }}
      # Add other environment variables as needed

    # Explication des commandes ci dessous:
    # - On commance par aller dans le dossier backend
    # - On crée le fichier .env
    # - On ajoute les variables d'environnement dans le fichier .env
    # - On installe les dépendances
    # pm2 est un process manager qui permet de gérer les processus nodejs
    # - On stop le processus pm2 qui est l'ancienne instance du backend
    # - On démarre le processus pm2 avec les nouveaux fichiers du backend
    # - On sauvegarde le processus pm2
    # - On va dans le dossier src du frontend
    # - On supprime le dossier tests/ qui est inutile en production et qui créé un bug de compilation a cause de la librairie jest
    # - On va dans le dossier racine du frontend
    # - On installe les dépendances en sudo car la dépendence vite est bugger sur linux et au niveau de ces syboliques, sudo permet d'installer le package là ou vite l'attend
    # - On build le frontend
    # - Une fois le projet build, on supprime le node_modules car ce fichier a été créé avec les droit root, ça veut dire que github actions ne peut pas les supprimer quand il fera son checkout
    # nginx est notre web server
    # - On redémarre le serveur nginx pour qu'il utilise les nouveau fichier du front que l'on vient de build

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - run: |
          cd backend
          touch .env
          echo "DATABASE_ACCESS=$DATABASE_ACCESS" >> .env
          echo "ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET" >> .env
          echo "REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET" >> .env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
          echo "GOOGLE_OAUTH_REDIRECT_URL=$GOOGLE_OAUTH_REDIRECT_URL" >> .env
          echo "FRONTEND_URL=https://g-sonde.online" >> .env
          npm i
          pm2 stop 0
          pm2 start 0
          pm2 save

          cd ../g-sonde/src/
          rm -rf tests/
          cd ..
          sudo npm i
          npm run build
          sudo rm -rf node_modules/
          sudo service nginx restart
      
